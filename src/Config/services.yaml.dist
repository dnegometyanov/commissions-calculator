imports:
  - { resource: 'parameters.yaml' }

services:
  guzzle.http.client:
    class:     GuzzleHttp\Client

  exchange.rates.api.factory:
    class:     Commissions\CalculatorContext\Infrastructure\ExchangeRates\ExchangeRatesApiFactory

  exchange.rates.client:
    class:     Commissions\CalculatorContext\Infrastructure\ExchangeRates\ExchangeRatesClient
    arguments:
      - '@guzzle.http.client'
      - 'http://api.exchangeratesapi.io/v1/latest?access_key=%s&format=1'
      - '%exchangeratesapi.apikey%'

  exchange.rates.retriever:
    class:     Commissions\CalculatorContext\Infrastructure\ExchangeRates\ExchangeRatesRetriever
    arguments:
      - '@exchange.rates.client'
      - '@exchange.rates.api.factory'

  transactions.data.retriever:
    class:     Commissions\CalculatorContext\Infrastructure\InputData\TransactionsDataRetrieverCSV

  currency.base:
    class:     Brick\Money\Currency
    factory:   [Brick\Money\Currency, of]
    arguments: ['EUR']

  money.private.withdrawal.rule.threshold.amount:
    class:     Brick\Money\Money
    factory:   [Brick\Money\Money, of]
    arguments: ['1000', 'EUR']

  transaction.type.deposit:
    class:     Commissions\CalculatorContext\Domain\ValueObject\TransactionType
    factory:   [Commissions\CalculatorContext\Domain\ValueObject\TransactionType, of]
    arguments: ['deposit']

  transaction.type.withdraw:
    class:     Commissions\CalculatorContext\Domain\ValueObject\TransactionType
    factory:   [Commissions\CalculatorContext\Domain\ValueObject\TransactionType, of]
    arguments: ['withdraw']

  user.type.business:
    class:     Commissions\CalculatorContext\Domain\ValueObject\UserType
    factory:   [Commissions\CalculatorContext\Domain\ValueObject\UserType, of]
    arguments: ['business']

  user.type.private:
    class:     Commissions\CalculatorContext\Domain\ValueObject\UserType
    factory:   [Commissions\CalculatorContext\Domain\ValueObject\UserType, of]
    arguments: ['private']

  condition.common.deposit.rule:
    class:     Commissions\CalculatorContext\Domain\Service\CommissionsCalculator\Rules\RuleCondition\ConditionTransactionTypeAndUserType
    arguments:
      - '@transaction.type.deposit'
      - null

  common.deposit.rule:
    class:     Commissions\CalculatorContext\Domain\Service\CommissionsCalculator\Rules\Category\Weekly\FlatPercentageWeeklyRule
    arguments:
      - '@condition.common.deposit.rule'
      - '@transaction.type.withdraw'
      - '@currency.base'
      - '0.0003'

  condition.business.withdraw.rule:
    class:     Commissions\CalculatorContext\Domain\Service\CommissionsCalculator\Rules\RuleCondition\ConditionTransactionTypeAndUserType
    arguments:
      - '@transaction.type.withdraw'
      - '@user.type.business'

  business.withdraw.rule:
    class:     Commissions\CalculatorContext\Domain\Service\CommissionsCalculator\Rules\Category\Weekly\FlatPercentageWeeklyRule
    arguments:
      - '@condition.business.withdraw.rule'
      - '@transaction.type.withdraw'
      - '@currency.base'
      - '0.005'

  condition.private.withdraw.rule:
    class:     Commissions\CalculatorContext\Domain\Service\CommissionsCalculator\Rules\RuleCondition\ConditionTransactionTypeAndUserType
    arguments:
      - '@transaction.type.withdraw'
      - '@user.type.private'

  private.withdraw.rule:
    class:     Commissions\CalculatorContext\Domain\Service\CommissionsCalculator\Rules\Category\Weekly\ThresholdPercentageWeeklyRule
    arguments:
      - '@condition.private.withdraw.rule'
      - '@transaction.type.withdraw'
      - '@currency.base'
      - '0'
      - '@money.private.withdrawal.rule.threshold.amount'
      - '3'
      - '0.003'

  rules.sequence:
    class:     Commissions\CalculatorContext\Domain\Service\CommissionsCalculator\Rules\RulesSequence
    arguments:
      - ['@common.deposit.rule', '@business.withdraw.rule', '@private.withdraw.rule']

  user.calculation.state.repository.default:
    class:     Commissions\CalculatorContext\Domain\Repository\CommissionsCalculator\UserCalculationStateRepositoryDefault

  transaction.commission.calculator:
    class:     Commissions\CalculatorContext\Domain\Service\CommissionsCalculator\TransactionCommissionCalculator
    arguments:
      - '@rules.sequence'
      - '@user.calculation.state.repository.default'

  commissions.calculator:
    class:     Commissions\CalculatorContext\Domain\Service\CommissionsCalculator\CommissionsCalculator
    arguments:
      - '@transaction.commission.calculator'

  calculate.commissions.console.command:
    class:     Commissions\CalculatorContext\Api\CalculateCommissionsConsoleCommand
    arguments:
      - '@transactions.data.retriever'
      - '@exchange.rates.retriever'
      - '@commissions.calculator'
